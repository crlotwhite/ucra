name: Documentation

on:
  push:
    branches: [ main, master ]
    paths:
      - 'include/**'
      - 'src/**'
      - 'docs/**'
      - 'README.md'
      - 'Doxyfile'
      - '.github/workflows/docs.yml'
      - 'CMakeLists.txt'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'include/**'
      - 'src/**'
      - 'docs/**'
      - 'README.md'
      - 'Doxyfile'
      - '.github/workflows/docs.yml'
      - 'CMakeLists.txt'

# Allow manual trigger
  workflow_dispatch:

# Set permissions for GitHub Pages deployment
permissions:
  # GITHUB_TOKEN needs write access to repository contents so the action
  # can create/update the gh-pages branch. Without this, push will fail
  # with "Permission ... denied to github-actions[bot]" (HTTP 403).
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper version info

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz cmake

      - name: Configure project
        run: |
          cmake -S . -B build-docs -DUCRA_BUILD_DOCS=ON -DUCRA_BUILD_EXAMPLES=OFF -DUCRA_BUILD_TOOLS=OFF

      - name: Build documentation
        run: |
          cmake --build build-docs --target docs

      - name: Check documentation output
        run: |
          ls -la build-docs/docs/doxygen/
          find build-docs/docs/doxygen/ -name "*.html" | head -10

      # Deploy to GitHub Pages only on main/master branch pushes
      - name: Deploy to GitHub Pages
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build-docs/docs/doxygen/html
          destination_dir: docs  # Optional: deploy to /docs subdirectory
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy documentation for ${{ github.sha }}'

      # For PR builds, just upload as artifact for review
      - name: Upload documentation artifact (for PRs)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: documentation-preview
          path: build-docs/docs/doxygen/html
          retention-days: 7

  # Optional: Link checker job to validate external links in documentation
  link-check:
    name: Check Documentation Links
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download documentation artifact
        uses: actions/download-artifact@v4
        with:
          name: documentation-preview
          path: docs-preview

      - name: Install link checker
        run: |
          npm install -g broken-link-checker

      - name: Check links in documentation
        run: |
          # Start a simple HTTP server for local link checking
          cd docs-preview
          python3 -m http.server 8080 &
          SERVER_PID=$!
          sleep 5

          # Run link checker
          blc http://localhost:8080 --recursive --get --filter-level 3 || true

          # Clean up server
          kill $SERVER_PID || true
